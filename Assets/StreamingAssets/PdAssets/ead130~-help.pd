#N canvas 434 44 499 444 12;
#X obj 16 276 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 16 300 t b b;
#X obj 16 359 tabwrite~ t;
#N canvas 0 50 450 250 (subpatch) 0;
#X array t 4410 float 2;
#X coords 0 1 4410 -1 200 140 1;
#X restore 275 278 graph;
#X text 26 392 expecting samplerate == 44100;
#X text 19 14 some possible workaround imitating [ead~ 1 30] in pd vanilla;
#X text 19 39 tried many things.. using [lop~ 1000] for rising \, [lop~ 35] for falling.. was almost resembling originals.. but hard to detect the switching moment!;
#X text 19 89 also with [fexpr~ ] \, succeeded auto-switching according to input x1 == 0 or x1 == 1.. but too complex to detect y1 attack phase is over or not automatically.. AND the processing for [fexpr~ ] seems tremedously heavy...;
#X text 19 159 so \, all of the study has some usages.. if attack/release time is same. just use [lop~] or if you don't care heavy load \, [fexpr~ ] and think of it as attack/hold/release.. no automatic release but do it more relaxed. ?;
#X text 40 226 [fexpr~ $y1+0.005*($x1-$y1)] is same as [lop~ ...] ..;
#X obj 48 324 ead130~;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 10 0;
#X connect 10 0 2 0;
